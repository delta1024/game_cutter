module GameCutter
  VERSION: String
  class Window
    @setup                  : () -> void?
    attr_accessor log_level : Symbol?
    attr_reader   width     : Integer
    attr_reader   height    : Integer
    attr_reader   title     : String
    attr_reader   fps       : Integer

    def initialize : (Integer width, Integer height, String title, ?setup: {} -> void, ?fps: Integer ) -> void
    def spawn      : ({} -> void) -> void
    def draw       : ({} -> void) -> void
  end

  interface _GameObj
    def update : (Game) -> void
    def draw   : () -> void
  end

  class Screen
    @objects                 : Array[_GameObj]
    attr_reader   game       : Game
    attr_accessor background : Raylib::Color

    def initialize   : (Game game, ?background: Raylib::Color) -> void
    def update       : () -> void
    def draw         : () -> void
    private
    def should_close : () -> bool
  end

  class Game 
    @screen                    : Screen
    attr_reader   window       : Window
    attr_accessor should_close : bool

    def run           : () -> void
    def change_screen : (Screen) -> void
    private
    def update        : () -> void
    def draw          : () -> void
  end
end
